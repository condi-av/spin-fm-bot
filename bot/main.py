import os, feedparser, asyncio
from aiogram import Bot, Dispatcher, types
from apscheduler.schedulers.asyncio import AsyncIOScheduler

BOT_TOKEN = os.getenv("BOT_TOKEN")          # –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
CHANNEL_ID = "@SpinFM_Rus"                  # –Ω–∞—à –∫–∞–Ω–∞–ª

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# -------- –∫–æ–º–∞–Ω–¥—ã --------
@dp.message(commands=["start"])
async def start(m: types.Message):
    kb = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="üé£ –ö–ª—ë–≤ –≤ –º–æ—ë–º —Ä–µ–≥–∏–æ–Ω–µ", callback_data="bite")]
        ]
    )
    await m.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø SpinFM-–±–æ—Ç. –ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", reply_markup=kb)

@dp.callback_query(lambda c: c.data == "bite")
async def bite(c: types.CallbackQuery):
    await c.answer()
    await c.message.answer("–ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞: –∫–ª—é—ë—Ç! üòÑ")

# -------- –ø–∞—Ä—Å–µ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π --------
async def post_news():
    url = "https://fishering.ru/feed/"   # –ø—Ä–∏–º–µ—Ä
    feed = feedparser.parse(url)
    for entry in feed.entries[:1]:       # 1 –ø–æ—Å—Ç –∑–∞ —Ä–∞–∑
        text = f"<b>{entry.title}</b>\n\n{entry.summary}\n\n{entry.link}"
        await bot.send_message(CHANNEL_ID, text, parse_mode="HTML")

# -------- –∑–∞–ø—É—Å–∫ --------
async def main():
    scheduler = AsyncIOScheduler()
    scheduler.add_job(post_news, "interval", hours=3)
    scheduler.start()
    await dp.start_polling(bot)

if __name__ == "__main__":

    asyncio.run(main())
